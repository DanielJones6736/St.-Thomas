#pragma config(Motor,  port1,           Arm,           tmotorVex393_HBridge, openLoop)
#pragma config(Motor,  port2,           LeftF,         tmotorVex393_MC29, openLoop, reversed)
#pragma config(Motor,  port3,           LeftB,         tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port6,           RightF,        tmotorVex393_MC29, openLoop, reversed)
#pragma config(Motor,  port7,           RightB,        tmotorVex393_MC29, openLoop)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

const int direction = 1;
const int turnVal = 1000;
const int disVal = 1000;
const bool park=true;
//Use encoder Values from other file

task main()
{
if(direction==2){

//go forward til claws under cap
motor[LeftF]=motor[LeftB]=motor[RightF]=motor[RightB]=127;
wait1Msec(disVal*sqrt(5));

//pick up cap
motor[Arm]=127;
wait1Msec(1000);

//swing to pole
motor[LeftF]=motor[LeftB]=-127;
motor[Arm]=15;
wait1Msec(1000); // tan-1(0.5)+90/360=%		r=width of robot
								 // %*2r*pi*disVal

//cap on
motor[Arm]=127;
wait1Msec(2500); //test value

//move forward
motor[LeftF]=motor[LeftB]=motor[RightF]=motor[RightB]=127;
wait1Msec((disVal*0.25)+100); //change 0.25 to length of claw in relation to tile

//turn tan-1(0.5/1.75) to tan-1(0.25)
motor[LeftF]=motor[LeftB]=127;
motor[RightF]=motor[RightB]=-127;
wait1Msec(turnVal*atan(0.5/1.75));

if(park){
	//drive onto plat
	motor[LeftF]=motor[LeftB]=motor[RightF]=motor[RightB]=127;
	wait1Msec((disVal*2)+100);
}


if(direction==3){

}
}






}
